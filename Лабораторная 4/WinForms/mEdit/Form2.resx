<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCAB4AFoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        /KKKKACiiigAooooAKKKKACiuZ+Ifxq8G/CKzNx4r8WeGvDMAGfM1XU4bNcfWRhXgXi7/gtX+yv4J1X7
        DefGvwhNdZxssGm1Dn6wI4/WqjTk9kB9R0Vg/DL4oeHfjP4E07xP4T1rT/EHh/VozJaX9lMJYZgCVYZH
        RlZWVlOGVlZSAQQN6pAKKKbLOlum6RlRfVjgUAOoZgilmOFHJJ7VnzeJ7NDhHadvSJS369K8S/bZ0vwx
        +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
        yh9aKKAHAYFFFFABRRRQAUUUUAFFFFAH/9k=
</value>
  </data>
</root>